apply plugin: 'com.android.application'

android {
    def app = rootProject.ext.android

    compileSdkVersion app.compileSdkVersion
    buildToolsVersion app.buildToolsVersion

    defaultConfig {
        applicationId app.applicationId
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName
        resConfigs app.resConfigs

        manifestPlaceholders = [AMAP_KEY: getLocalValue("AMAP_KEY")]
        buildConfigField "String", "$rootProject.ext.fir.name", "\"$rootProject.ext.fir.value\""
        buildConfigField "String", "$rootProject.ext.alipay.name", "\"$rootProject.ext.alipay.value\""
        buildConfigField "String", "$rootProject.ext.mistats_appid.name", "\"$rootProject.ext.alipay.value\""
        buildConfigField "String", "$rootProject.ext.mistats_appkey.name", "\"$rootProject.ext.alipay.value\""

        //Error:Execution failed for task ':SimpleMusic:transformClassesAndResourcesWithProguardForRelease'.
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("musicodo.jks")
            storePassword getLocalValue("STORE_PASSWORD")
            keyAlias getLocalValue("KEY_ALIAS")
            keyPassword getLocalValue("KEY_PASSWORD")
            v2SigningEnabled true
        }
        debug {
            storeFile file("debug.keystore")
        }
    }


    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }


    compileOptions {
        //使用JAVA8语法解析,开启Lambda
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

def getLocalValue(String key) {
    return getLocalValue(key, false)
}

def getLocalValue(String key, boolean quot) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('./musicodo/musicodo.properties').newDataInputStream())
    def value = properties.containsKey(key) ? properties.get(key) : ""
    if (quot) {
        value = "\"" + value + "\""
    }
    return value
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //小米统计 MiStats https://dev.mi.com/doc/page_id=4023/index.html
    implementation files('libs/MiStats_SDK_Client_1_9_6.jar')

    // 默认 UI
    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_version"
    implementation "com.android.support:design:$rootProject.ext.support_version"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintlayout_version"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.support_version"
    implementation "com.android.support:cardview-v7:$rootProject.ext.support_version"
    implementation "com.android.support:palette-v7:$rootProject.ext.support_version"

    //Android Vector曲折的兼容之路 https://www.jianshu.com/p/e3614e7abc03
    implementation "com.android.support:support-vector-drawable:$rootProject.ext.support_version"

    //Loading/yankai-victor   https://github.com/yankai-victor/Loading
    compile "com.victor:lib:$rootProject.ext.yankai_victor_version"

    // rx

    //RxJava https://github.com/ReactiveX/RxAndroid
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroid_version"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava_version"

    //glide https://github.com/bumptech/glide
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide_version"

    //annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glide_version"

    //glide-transformations   https://github.com/wasabeef/glide-transformations
    implementation "jp.wasabeef:glide-transformations:$rootProject.ext.glide_transformations_version"
    implementation "jp.co.cyberagent.android.gpuimage:gpuimage-library:$rootProject.ext.gpuimage_lib_version"

}
